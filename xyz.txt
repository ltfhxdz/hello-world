简单的代码提交流程
git status 查看工作区代码相对于暂存区的差别
git add . 将当前目录下修改的所有代码从工作区添加到暂存区 . 代表当前目录
git commit -m ‘注释’ 将缓存区内容添加到本地仓库
git pull origin master先将远程仓库master中的信息同步到本地仓库master中
git push origin master 将本地版本库推送到远程服务器，
origin是远程主机，master表示是远程服务器上的master分支和本地分支重名的简写，分支名是可以修改的



第一步：cd进入你放项目文件的地址
第二步：输入git init
第三步：输入git add .     
第四步： git commit -m "first commit"
第五步： git push origin master
    git remote add origin https://github.com/ltfhxdz/hello-world.git
    git remote add origin git@github.com:ltfhxdz/hello-world.git
    git push -u origin master

修改成ssh url
    git remote set-url origin git@github.com:ltfhxdz/hello-world.git
    git remote set-url origin git@github.com:ltfhxdz/learned.git

查看clone地址
    git remote -v


$ git remote -v
origin  https://github.com/ltfhxdz/learned.git (fetch)
origin  https://github.com/ltfhxdz/learned.git (push)



git commit -m "second commit"

生成ssh秘钥
ssh-keygen -t rsa -b 4096 -C "ltfhxdz@gmail.com"


18681@DESKTOP-D1D6Q80 MINGW64 /d/xyz/workspace/hello-world (master)
$ ls -al ~/.ssh
ls: cannot access '/c/Users/18681/.ssh': No such file or directory

18681@DESKTOP-D1D6Q80 MINGW64 /d/xyz/workspace/hello-world (master)
$ ssh-keygen -t rsa -b 4096 -C "ltfhxdz@gmail.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/18681/.ssh/id_rsa):
Created directory '/c/Users/18681/.ssh'.
Enter passphrase (empty for no passphrase):不要输入密码，否则每次还提示输入
Enter same passphrase again:
Your identification has been saved in /c/Users/18681/.ssh/id_rsa
Your public key has been saved in /c/Users/18681/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:2KF1GAcSuNjfuCDMahzWBACEj+hzRy6dIV/gEp9nzR4 ltfhxdz@gmail.com
The key's randomart image is:
+---[RSA 4096]----+
|B.   .o.o..      |
|.. ... . +       |
|.o.o+.o * .      |
|o o+o* O E       |
|.oo B.OoS .      |
| =++.*o ..       |
|o.+.o. .         |
|.o    .          |
|.                |
+----[SHA256]-----+

查看ssh代理的pid，正在运行
    $ eval $(ssh-agent -s)  
    Agent pid 222

id_rsa目录：
C:\Users\18681\.ssh

将 SSH 密钥添加到 ssh-agent
    $ ssh-add ~/.ssh/id_rsa
    Enter passphrase for /c/Users/18681/.ssh/id_rsa:
    Identity added: /c/Users/18681/.ssh/id_rsa (ltfhxdz@gmail.com)
将 SSH 密钥复制到剪贴板
    $ clip < ~/.ssh/id_rsa.pub

打开github ssh生成的网页，粘贴进入


18681@DESKTOP-D1D6Q80 MINGW64 /d/xyz/workspace/hello-world (master)
$ git push origin master
The authenticity of host 'github.com (13.229.188.59)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'github.com,13.229.188.59' (RSA) to the list of known hosts.
Everything up-to-date



git uses the concept of a hierarchicl configuration.
I.e. there are multiple levels;settings in higher levels .override values in lower levels.
the "effective" tab shows you the effective values for the current scope(read-only).
select any level to see the values stored there.
in order to change settings select a level,enter the values and select there to store to.

git使用层次结构配置的概念。
一、 有多个级别；设置在较高级别。覆盖较低级别的值。
“有效”选项卡显示当前作用域的有效值（只读）。
选择任意级别以查看存储在其中的值。
要更改设置，请选择一个级别，输入值并选择要存储到的级别。


no supported authentication methods available(server sent:publickey)